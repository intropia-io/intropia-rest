{
  "openapi": "3.0.0",
  "info": {
    "title": "intropia rest api",
    "version": "1.0"
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "Type": {
        "type": "object",
        "properties": {
          "name": {
            "id": "string",
            "userId": "string",
            "fisrtName": "string",
            "lastName": "string",
            "username": "string",
            "dynasty": {
              "$ref": "#/components/schemas/Dynasty"
            },
            "questTypes": {
              "$ref": "#/components/schemas/Type"
            },
            "eventTypes": {
              "$ref": "#/components/schemas/Type"
            },
            "reffProgram": "ReffProgram",
            "updateFrequency": "UpdateFrequency",
            "type": "string",
            "description": "string",
            "color": "string",
            "categoryType": "CategoryType",
            "customRules": "CustomRules[]",
            "title": "Type.name"
          },
          "id": {
            "title": "Type.id",
            "type": "number"
          },
          "description": {
            "title": "Type.description",
            "type": "string"
          },
          "color": {
            "title": "Type.color",
            "type": "string"
          },
          "categoryType": {
            "$ref": "#/components/schemas/CategoryType",
            "title": "Type.categoryType"
          },
          "customRules": {
            "items": {
              "$ref": "#/components/schemas/CustomRules",
              "title": "Type.customRules.[]"
            },
            "title": "Type.customRules",
            "type": "array"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "color",
          "categoryType",
          "customRules"
        ],
        "additionalProperties": false,
        "title": "Type"
      },
      "Dynasty": {
        "type": "object",
        "properties": {
          "name": {
            "id": "string",
            "type": "string",
            "description": "string",
            "avatar": "string",
            "title": "Dynasty.name"
          },
          "id": {
            "title": "Dynasty.id",
            "type": "string"
          },
          "description": {
            "title": "Dynasty.description",
            "type": "string"
          },
          "avatar": {
            "title": "Dynasty.avatar",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "avatar"
        ],
        "additionalProperties": false,
        "title": "Dynasty",
        "description": "@swagger components:\r\n schemas:\r\n   Dynasty:\r\n     type: object\r\n     properties:\r\n       name:\r\n         id: string\r\n         type: string\r\n         description: string\r\n         avatar: string"
      },
      "RefLink": {
        "type": "object",
        "properties": {
          "name": {
            "id": "string",
            "shortId": "string",
            "questId": "string",
            "createdById": "string",
            "refAccountId": "string",
            "createdAt": "string",
            "updatedAt": "string"
          },
          "id": {
            "title": "RefLink.id",
            "type": "string"
          },
          "shortId": {
            "title": "RefLink.shortId",
            "type": "string"
          },
          "questId": {
            "title": "RefLink.questId",
            "type": "string"
          },
          "createdById": {
            "title": "RefLink.createdById",
            "type": "string"
          },
          "refAccountId": {
            "title": "RefLink.refAccountId",
            "type": "string"
          },
          "createdAt": {
            "title": "RefLink.createdAt",
            "type": "string"
          },
          "updatedAt": {
            "title": "RefLink.updatedAt",
            "type": "string"
          }
        },
        "required": [
          "id",
          "shortId",
          "questId",
          "createdById",
          "refAccountId",
          "createdAt",
          "updatedAt"
        ],
        "additionalProperties": false,
        "title": "RefLink",
        "description": "@swagger components:\r\n schemas:\r\n   RefLink:\r\n     type: object\r\n     properties:\r\n       name:\r\n         id: string\r\n         shortId: string\r\n         questId: string\r\n         createdById: string\r\n         refAccountId: string\r\n         createdAt: string\r\n         updatedAt: string"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "WhitelistSubscribes": {
        "type": "object",
        "properties": {
          "name": {
            "id": "string",
            "email": "string",
            "createdAt": "string"
          },
          "id": {
            "title": "WhitelistSubscribes.id",
            "type": "number"
          },
          "email": {
            "title": "WhitelistSubscribes.email",
            "type": "string"
          },
          "createdAt": {
            "title": "WhitelistSubscribes.createdAt",
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "createdAt"
        ],
        "additionalProperties": false,
        "title": "WhitelistSubscribes",
        "description": "@swagger components:\r\n schemas:\r\n   WhitelistSubscribes:\r\n     type: object\r\n     properties:\r\n       name:\r\n         id: string\r\n         email: string\r\n         createdAt: string"
      },
      "BotSubscription": {
        "properties": {
          "id": {
            "title": "BotSubscription.id",
            "type": "number"
          },
          "userId": {
            "title": "BotSubscription.userId",
            "type": "string"
          },
          "fisrtName": {
            "title": "BotSubscription.fisrtName",
            "type": "string"
          },
          "lastName": {
            "title": "BotSubscription.lastName",
            "type": "string"
          },
          "username": {
            "title": "BotSubscription.username",
            "type": "string"
          },
          "dynasty": {
            "items": {
              "$ref": "#/components/schemas/Dynasty",
              "title": "BotSubscription.dynasty.[]"
            },
            "title": "BotSubscription.dynasty",
            "type": "array"
          },
          "questTypes": {
            "items": {
              "$ref": "#/components/schemas/Type",
              "title": "BotSubscription.questTypes.[]"
            },
            "title": "BotSubscription.questTypes",
            "type": "array"
          },
          "eventTypes": {
            "items": {
              "$ref": "#/components/schemas/Type",
              "title": "BotSubscription.eventTypes.[]"
            },
            "title": "BotSubscription.eventTypes",
            "type": "array"
          },
          "reffProgram": {
            "$ref": "#/components/schemas/ReffProgram",
            "title": "BotSubscription.reffProgram"
          },
          "updateFrequency": {
            "$ref": "#/components/schemas/UpdateFrequency",
            "title": "BotSubscription.updateFrequency"
          },
          "bot": {
            "$ref": "#/components/schemas/BotType",
            "title": "BotSubscription.bot"
          }
        },
        "required": [
          "id",
          "userId",
          "fisrtName",
          "lastName",
          "username",
          "dynasty",
          "questTypes",
          "eventTypes",
          "reffProgram",
          "updateFrequency",
          "bot"
        ],
        "additionalProperties": false,
        "title": "BotSubscription",
        "type": "object"
      },
      "BotSubscriptionPost": {
        "properties": {
          "userId": {
            "title": "BotSubscriptionPost.userId",
            "type": "string"
          },
          "fisrtName": {
            "title": "BotSubscriptionPost.fisrtName",
            "type": "string"
          },
          "lastName": {
            "title": "BotSubscriptionPost.lastName",
            "type": "string"
          },
          "username": {
            "title": "BotSubscriptionPost.username",
            "type": "string"
          },
          "dynasty": {
            "items": {
              "title": "BotSubscriptionPost.dynasty.[]",
              "type": "string"
            },
            "title": "BotSubscriptionPost.dynasty",
            "type": "array"
          },
          "questTypes": {
            "items": {
              "title": "BotSubscriptionPost.questTypes.[]",
              "type": "string"
            },
            "title": "BotSubscriptionPost.questTypes",
            "type": "array"
          },
          "eventTypes": {
            "items": {
              "title": "BotSubscriptionPost.eventTypes.[]",
              "type": "string"
            },
            "title": "BotSubscriptionPost.eventTypes",
            "type": "array"
          },
          "reffProgram": {
            "$ref": "#/components/schemas/ReffProgram",
            "title": "BotSubscriptionPost.reffProgram"
          },
          "updateFrequency": {
            "$ref": "#/components/schemas/UpdateFrequency",
            "title": "BotSubscriptionPost.updateFrequency"
          },
          "bot": {
            "$ref": "#/components/schemas/BotType",
            "title": "BotSubscriptionPost.bot"
          }
        },
        "required": [
          "userId",
          "fisrtName",
          "lastName",
          "username",
          "dynasty",
          "questTypes",
          "eventTypes",
          "reffProgram",
          "updateFrequency",
          "bot"
        ],
        "additionalProperties": false,
        "title": "BotSubscriptionPost",
        "type": "object"
      },
      "BotSubscriptionStatusPost": {
        "properties": {
          "userId": {
            "title": "BotSubscriptionStatusPost.userId",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/BotUserStatus",
            "title": "BotSubscriptionStatusPost.status"
          }
        },
        "required": [
          "userId",
          "status"
        ],
        "additionalProperties": false,
        "title": "BotSubscriptionStatusPost",
        "type": "object"
      },
      "CategoryType": {
        "enum": [
          "INSTITUTE",
          "EVENT",
          "QUEST"
        ],
        "title": "CategoryType",
        "type": "string"
      },
      "CustomRules": {
        "enum": [
          "NO_REWARD",
          "HIDE_FROM_EXPLORER"
        ],
        "title": "CustomRules",
        "type": "string"
      },
      "ReffProgram": {
        "enum": [
          "SUBSCRIBED",
          "UNSUBSCRIBED"
        ],
        "title": "ReffProgram",
        "type": "string"
      },
      "UpdateFrequency": {
        "enum": [
          "WEEKLY",
          "REALTIME"
        ],
        "title": "UpdateFrequency",
        "type": "string"
      },
      "RestUserType": {
        "enum": [
          "INHOUSE",
          "OUTHOUSE"
        ],
        "title": "RestUserType",
        "type": "string"
      },
      "BotType": {
        "enum": [
          "tr3butor",
          "intropia"
        ],
        "title": "BotType",
        "type": "string"
      },
      "BotUserStatus": {
        "enum": [
          "NEW",
          "SUBSCRIBED",
          "UNSUBSCRIBED",
          "DELETED"
        ],
        "title": "BotUserStatus",
        "type": "string"
      },
      "Institute": {
        "properties": {
          "id": {
            "title": "Institute.id",
            "type": "string"
          },
          "name": {
            "title": "Institute.name",
            "type": "string"
          },
          "description": {
            "title": "Institute.description",
            "type": "string"
          },
          "linkWebsite": {
            "title": "Institute.linkWebsite",
            "type": "string"
          },
          "linkTelegram": {
            "title": "Institute.linkTelegram",
            "type": "string"
          },
          "linkTwitter": {
            "title": "Institute.linkTwitter",
            "type": "string"
          },
          "linkReddit": {
            "title": "Institute.linkReddit",
            "type": "string"
          },
          "linkDiscord": {
            "title": "Institute.linkDiscord",
            "type": "string"
          },
          "linkMedium": {
            "title": "Institute.linkMedium",
            "type": "string"
          },
          "contractAddress": {
            "title": "Institute.contractAddress",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "linkWebsite",
          "linkTelegram",
          "linkTwitter",
          "linkReddit",
          "linkDiscord",
          "linkMedium",
          "contractAddress"
        ],
        "additionalProperties": false,
        "title": "Institute",
        "description": "@swagger components:\r\n schemas:\r\n   Institute:\r\n     type: object\r\n     properties:\r\n       id:\r\n         type: string\r\n         format: cuid\r\n       name:\r\n         type: string\r\n       description:\r\n         type: string\r\n       linkWebsite:\r\n         type: string\r\n       linkTelegram:\r\n         type: string\r\n       linkTwitter:\r\n         type: string\r\n       linkReddit:\r\n         type: string\r\n       linkDiscord:\r\n         type: string\r\n       linkMedium:\r\n         type: string\r\n       contractAddress:\r\n         type: string",
        "type": "object"
      },
      "Quest": {
        "properties": {
          "id": {
            "title": "Quest.id",
            "type": "string"
          },
          "title": {
            "title": "Quest.title",
            "type": "string"
          },
          "description": {
            "title": "Quest.description",
            "type": "string"
          },
          "dynasty": {
            "$ref": "#/components/schemas/Dynasty",
            "title": "Quest.dynasty"
          },
          "token": {
            "$ref": "#/components/schemas/Token",
            "title": "Quest.token"
          },
          "type": {
            "$ref": "#/components/schemas/Type",
            "title": "Quest.type"
          },
          "linkApply": {
            "title": "Quest.linkApply",
            "type": "string"
          },
          "rewardFrom": {
            "title": "Quest.rewardFrom",
            "type": "number"
          },
          "rewardTo": {
            "title": "Quest.rewardTo",
            "type": "number"
          },
          "textBlocks": {
            "title": "Quest.textBlocks",
            "type": "string"
          },
          "updatedAt": {
            "title": "Quest.updatedAt",
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Institute",
            "title": "Quest.organization"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "dynasty",
          "token",
          "type",
          "linkApply",
          "textBlocks",
          "updatedAt",
          "organization"
        ],
        "additionalProperties": false,
        "title": "Quest",
        "type": "object"
      },
      "Token": {
        "properties": {
          "name": {
            "title": "Token.name",
            "type": "string"
          },
          "avatar": {
            "title": "Token.avatar",
            "type": "string"
          }
        },
        "required": [
          "name",
          "avatar"
        ],
        "additionalProperties": false,
        "title": "Token",
        "description": "@swagger components:\r\n schemas:\r\n   Token:\r\n     type: object\r\n     properties:\r\n       name:\r\n         type: string\r\n       avatar:\r\n         type: string",
        "type": "object"
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/api/dynasty": {
      "get": {
        "tags": [
          "Dynasties"
        ],
        "description": "Returns all dynasties",
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Dynasty"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/institute": {
      "get": {
        "tags": [
          "Institutes"
        ],
        "description": "Returns all institutes",
        "parameters": [
          {
            "name": "take",
            "description": "take number of rows (default 10)",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "description": "how many rows to skip (default 0)",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "sort",
            "description": "asc",
            "in": "query",
            "default": "desc",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Institute"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/institute/{instituteId}": {
      "get": {
        "tags": [
          "Institutes"
        ],
        "description": "Returns all institutes",
        "parameters": [
          {
            "name": "instituteId",
            "description": "id of organization",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Institute"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/quest": {
      "get": {
        "tags": [
          "Quests"
        ],
        "description": "Returns all active quests",
        "parameters": [
          {
            "name": "take",
            "description": "take number of rows (default 100)",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "description": "how many rows to skip (default 0)",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "sort",
            "description": "desc or asc",
            "in": "query",
            "default": "desc",
            "required": false,
            "type": "string"
          },
          {
            "name": "contractAddress",
            "description": "filter by contract address of institute",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "instituteId",
            "description": "filter by instituteId of institute",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Quest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/quest/{questId}": {
      "get": {
        "tags": [
          "Quests"
        ],
        "description": "Get Quest by id",
        "parameters": [
          {
            "name": "questId",
            "description": "id of quest",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Quest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ref-link": {
      "get": {
        "tags": [
          "Ref Link"
        ],
        "description": "Returns all ref links",
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/RefLink"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ref-link/{shortId}": {
      "get": {
        "tags": [
          "Ref Link"
        ],
        "description": "get ref link info",
        "parameters": [
          {
            "name": "shortId",
            "description": "short id of ref link",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/RefLink"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription": {
      "get": {
        "tags": [
          "Bot Subscription"
        ],
        "description": "Returns all bot subscriptions",
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/BotSubscription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription/{userId}": {
      "get": {
        "tags": [
          "Bot Subscription"
        ],
        "description": "get user subscription info",
        "parameters": [
          {
            "name": "userId",
            "description": "id of user chat",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/BotSubscription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription/create": {
      "post": {
        "tags": [
          "Bot Subscription"
        ],
        "description": "create new subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/BotSubscriptionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/BotSubscription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription/status-update": {
      "post": {
        "tags": [
          "Bot Subscription"
        ],
        "description": "update subscription statys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/BotSubscriptionStatusPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/BotSubscription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/type": {
      "get": {
        "tags": [
          "Types"
        ],
        "description": "Returns all types",
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whitelist": {
      "get": {
        "tags": [
          "Whitelist Subscribes"
        ],
        "description": "Returns all whitelist subscribes",
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/WhitelistSubscribes"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whitelist/create": {
      "post": {
        "tags": [
          "Whitelist Subscribes"
        ],
        "description": "create new whitelist subscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/WhitelistSubscribes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/WhitelistSubscribes"
                  }
                }
              }
            }
          }
        }
      }
    },
    "openapi": {
      "0": "3",
      "1": ".",
      "2": "0",
      "3": ".",
      "4": "0"
    },
    "info": {
      "title": "Converted from whitelist.swagger.yaml with typeconv",
      "version": "1",
      "x-id": "whitelist.swagger.yaml",
      "x-comment": "Generated from models\\whitelist.ts by core-types-json-schema (https://github.com/grantila/core-types-json-schema) on behalf of typeconv (https://github.com/grantila/typeconv)"
    }
  },
  "tags": []
}